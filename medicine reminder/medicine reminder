<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Medicine Reminder & Tracker</title>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
  <style>
    body {
      font-family: 'Poppins', sans-serif;
      margin: 0;
      padding: 0;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      height: 100vh;
      background: linear-gradient(45deg, #ff6f61, #ffcc33, #33ccff);
      animation: backgroundAnimation 10s infinite alternate;
      overflow: hidden;
    }

    h1 {
      font-size: 36px;
      color: #fff;
      margin-top: 20px;
      animation: fadeIn 2s ease-in-out;
    }

    nav {
      margin-top: 20px;
    }

    nav button {
      background-color: #8e44ad;
      color: white;
      padding: 12px 20px;
      margin: 10px;
      border-radius: 10px;
      cursor: pointer;
      font-size: 18px;
      transition: 0.3s;
    }

    nav button:hover {
      background-color: #732d91;
    }

    .container {
      display: none;
      padding: 20px;
      background-color: white;
      border-radius: 20px;
      width: 90%;
      max-width: 500px;
      margin: 20px auto;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
      animation: fadeIn 1s ease-in-out;
    }

    .container.active {
      display: block;
      animation: swipeIn 0.6s ease-out;
    }

    input, button {
      padding: 12px;
      margin: 10px 0;
      width: 100%;
      border-radius: 10px;
      border: 1px solid #ccc;
      font-size: 16px;
    }

    button.add-btn {
      background-color: #8e44ad;
      color: white;
      border: none;
      transition: 0.3s;
    }

    button.add-btn:hover {
      background-color: #732d91;
    }

    #chatWindow {
      position: fixed;
      bottom: 30px;
      right: 30px;
      background-color: white;
      border-radius: 20px;
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
      width: 320px;
      height: 400px;
      display: none;
      flex-direction: column;
    }

    #chatMessages {
      flex-grow: 1;
      overflow-y: auto;
      max-height: 300px;
    }

    #userInput {
      display: flex;
      margin-top: 10px;
    }

    #userInput input {
      flex-grow: 1;
    }

    @keyframes fadeIn {
      0% { opacity: 0; }
      100% { opacity: 1; }
    }

    @keyframes backgroundAnimation {
      0% { background: linear-gradient(45deg, #ff6f61, #ffcc33, #33ccff); }
      100% { background: linear-gradient(45deg, #33ccff, #ffcc33, #ff6f61); }
    }

    @keyframes swipeIn {
      0% { transform: translateX(-100%); }
      100% { transform: translateX(0); }
    }

    @keyframes chatbotEffect {
      0% { opacity: 0; transform: scale(0.5); }
      100% { opacity: 1; transform: scale(1); }
    }

    @keyframes pageTransition {
      0% { transform: translateY(100%); }
      100% { transform: translateY(0); }
    }

    .chatbot-response {
      background: linear-gradient(45deg, #ff6f61, #ffcc33, #33ccff);
      padding: 15px;
      margin: 10px;
      border-radius: 10px;
      color: white;
      font-size: 18px;
      animation: chatbotEffect 0.6s ease-out;
    }

    .nextPage {
      animation: pageTransition 1s ease-out forwards;
    }
  </style>
</head>
<body>

  <h1>üíä Medicine Reminder & Tracker</h1>

  <nav>
    <button onclick="showPage('reminderPage')">üìã Reminder</button>
    <button onclick="showPage('doctorPage')">üè• Doctors</button>
    <button onclick="showPage('takenPage')">‚úÖ Taken Meds</button>
    <button onclick="showPage('dietPage')">ü•ó Healthy Diet</button>
  </nav>

  <div class="container active" id="reminderPage">
    <label for="medName">Medicine Name:</label>
    <input type="text" id="medName" placeholder="e.g. Paracetamol" />
    <button onclick="startVoiceRecognition()">üé§ Use Voice</button>

    <label for="medTime">Time:</label>
    <input type="time" id="medTime" />

    <label for="medDose">Dose:</label>
    <input type="text" id="medDose" placeholder="e.g. 1 tablet" />

    <button class="add-btn" onclick="addMedicine()">Add Reminder</button>

    <div class="list" id="medList"></div>
  </div>

  <div class="container" id="doctorPage">
    <h2>üè• Nearby Doctor Search</h2>
    <iframe src="https://www.google.com/maps?q=doctor+clinic+near+me&output=embed" width="100%" height="300" style="border:0;" allowfullscreen="" loading="lazy"></iframe>
  </div>

  <div class="container" id="takenPage">
    <h2>‚úÖ Medicines Taken</h2>
    <div id="takenList">No medicines marked as taken yet.</div>
  </div>

  <div class="container" id="dietPage">
    <h2>ü•ó Healthy Diet Chart</h2>
    <ul>
      <li>üçé Morning: Apple, Oats, Green Tea</li>
      <li>üçö Lunch: Brown Rice, Vegetables, Dal</li>
      <li>üçå Evening: Banana, Sprouts, Buttermilk</li>
      <li>ü•¶ Dinner: Boiled Veggies, Soup, Whole Wheat Roti</li>
    </ul>
  </div>

  <div id="chatbot" onclick="toggleChat()">ü§ñ</div>
  <div id="chatWindow">
    <div id="chatMessages"></div>
    <div id="userInput">
      <input type="text" id="chatText" placeholder="Ask me anything...">
      <button onclick="sendMessage()">Send</button>
    </div>
  </div>

  <script>
    function showPage(pageId) {
      document.querySelectorAll('.container').forEach(div => {
        div.classList.remove('active');
      });
      document.getElementById(pageId).classList.add('active');
    }

    function addMedicine() {
      const name = document.getElementById('medName').value;
      let time = document.getElementById('medTime').value;
      const dose = document.getElementById('medDose').value;

      if (!name || !dose) {
        alert("Please enter medicine name and dose!");
        return;
      }

      if (!time) {
        time = "09:00";
        alert("Suggested time set: " + time);
      }

      const medDiv = document.createElement('div');
      medDiv.className = 'medicine';
      medDiv.innerHTML = `<strong>${name}</strong><br>Time: ${time}<br>Dose: ${dose} <br><button onclick="markTaken(this, '${name}')">Mark as Taken</button>`;
      document.getElementById('medList').appendChild(medDiv);

      document.getElementById('medName').value = "";
      document.getElementById('medTime').value = "";
      document.getElementById('medDose').value = "";
    }

    function markTaken(btn, name) {
      const med = btn.parentElement;
      med.style.opacity = 0.5;
      btn.remove();
      const item = document.createElement('div');
      item.textContent = `‚úîÔ∏è ${name}`;
      document.getElementById('takenList').appendChild(item);
    }

    function startVoiceRecognition() {
      const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();
      recognition.lang = 'en-US';
      recognition.start();
      recognition.onresult = function(event) {
        const transcript = event.results[0][0].transcript;
        document.getElementById('medName').value = transcript;
        alert("Voice command: " + transcript);
      };
      recognition.onerror = function(event) {
        alert("Error occurred in recognition: " + event.error);
      };
    }

    function toggleChat() {
      const chat = document.getElementById('chatWindow');
      chat.style.display = chat.style.display === 'flex' ? 'none' : 'flex';
    }

    function sendMessage() {
      const chatBox = document.getElementById('chatMessages');
      const input = document.getElementById('chatText');
      const msg = input.value;
      if (!msg) return;
      const userMsg = document.createElement('div');
      userMsg.innerHTML = `<strong>You:</strong> ${msg}`;
      chatBox.appendChild(userMsg);
      input.value = "";

      setTimeout(() => {
        const botMsg = document.createElement('div');
        botMsg.classList.add('chatbot-response');
        botMsg.innerHTML = `<strong>AI:</strong> ${getBotReply(msg)}`;
        chatBox.appendChild(botMsg);
        chatBox.scrollTop = chatBox.scrollHeight;

        setTimeout(() => {
          showPage('doctorPage');
          document.getElementById('doctorPage').classList.add('nextPage');
        }, 1500);
      }, 500);
    }

    function getBotReply(message) {
      message = message.toLowerCase();
      if (message.includes("medicine")) return "I can remind you of your medicines!";
      if (message.includes("diet")) return "I can suggest a healthy diet plan for you!";
      return "Sorry, I didn't understand. Please ask about medicine or diet.";
    }
  </script>
</body>
</html>
